<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_window_crafting_barter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-105</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basic variables setup:
scroll=0;
selected=0;

xx=0;
yy=0;

//Update available recipes:
/*

if sev_get("Abc")=true crafting_create_recipe(...);

*/

//Recipe list:
var i;

for (i=1; i&lt;=15; i+=1) begin
  recipes_list[i]=0;
 end;

update_list=true;

//Recipe array:
var i;

for (i=1; i&lt;=16; i+=1) begin
 if i mod 2 = 1
   recipes_array[i]=""
  else recipes_array[i]=0;
end;

update_array=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Closing:
if keyboard_check_pressed(userControls[KEYBOARD.pause])=true
 instance_destroy();

//This will update the recipe list if there was some scrolling:
var l=global.crafting_recipes;
if update_list=true begin

 var i;

 for (i=1; i&lt;=15; i+=1) begin
  recipes_list[i]=0;
 end;

 for (i=1; i&lt;=ds_list_size(l); i+=1) begin

  if i&gt;scroll recipes_list[i-scroll]=ds_list_find_value(l,i-1);
  if i=15+scroll break;

 end;
 
 update_list=false;

end;

//This will get the required variables of the selected recipe:
if update_array=true begin

 var i;

 //Flush the array:
 for (i=1; i&lt;=16; i+=1) begin
  if i mod 2 = 1
    recipes_array[i]=""
   else recipes_array[i]=0;
 end;

 //Fill the array:
 if selected&lt;&gt;0 begin

  for (i=1; i&lt;=ds_list_size(selected); i+=1) begin
  
   recipes_array[i]=selected[| i-1];  
  
  end;

 end;
 
 update_array=false;
 
end;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if scroll&lt;ds_list_size(global.crafting_recipes)-15 {
 scroll+=1;
 update_list=true;
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if scroll&gt;0 {
 scroll-=1;
 update_list=true;
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var str,spr,i,counter,check;

draw_set_font(f_windows);

//Set up GUI x and y:
xx=gui_width()/2-sprite_get_width(sprite_index)/2;
yy=gui_height()/2-sprite_get_height(sprite_index)/2;

//Draw own sprite:
draw_sprite(spr_window_crafting_barter,0,xx,yy);

//ITEM LIST::
draw_set_alpha(1);
draw_set_valign(fa_top);
draw_set_halign(fa_left);

counter=0;

//LOOP BEGIN:
repeat (15) begin
counter+=1;

if recipes_list[counter]&lt;&gt;0 {

//Small icons:
 spr=real( inv_item_get_static_value( ds_list_find_value(recipes_list[counter],0),7 ) );
 draw_sprite_ext(spr,0,xx+9,yy+counter*20+43,0.5,0.5,0,c_white,1);

//Clickable text boxes:
spr=ite(recipes_list[counter],selected,1,0);
if gui_draw_sprite_clickable(spr_window_name_box,spr,xx+29,yy+counter*20+43,1)=true
 {selected=recipes_list[counter];
  update_array=true; }

//Recipe names:
draw_set_color(c_black); 
 draw_text(xx+32,yy+45+20*counter,ds_list_find_value(recipes_list[counter],0)+" ("+string(ds_list_find_value(recipes_list[counter],1))+")");

} 
end;
//LOOP END;
 
//Filter title:
draw_set_color(c_black);
draw_text(xx+12,yy+42,"Recipes");

//ITEM DETAILS BEGIN:
if (selected&lt;&gt;0 and update_array=false) begin

//Item name:
draw_set_color(c_black); 
draw_text(xx+242,yy+42,recipes_array[1]+" ("+string(recipes_array[2])+")");

//Item icon:
draw_sprite(real(inv_item_get_static_value(recipes_array[1],7)),0,xx+377,yy+67);

//Description:
str="You need:#";

i=3;
check=true; //It will also check whether it's currently possible to craft (in that case, "check" will be true).
repeat (7) begin
 if recipes_array[i]&lt;&gt;"" {str+=" -"+recipes_array[i]+" ("+string(inv_count_item(recipes_array[i]))
                         +"/"+string(recipes_array[i+1])+")#";
                         
 if inv_count_item(recipes_array[i])&lt;recipes_array[i+1] check=false; }

 i+=2;
end;

str+="#You will get:# -"+recipes_array[1]+" ("+string(recipes_array[2])+")"+":#  "+inv_item_get_static_value(recipes_array[1],6);

draw_text_ext(xx+234,yy+113,str,13,180);

//Craft button:
spr=ite(check,true,0,1);
if gui_draw_sprite_clickable(spr_window_button_craft,spr,xx+249,yy+348,true)
 {if spr=0 { 
 i=3;
 repeat (7) begin
  if recipes_array[i]&lt;&gt;"" {
   inv_remove_item(recipes_array[i],recipes_array[i+1]); }
   i+=2;
 end;
 inv_add_item(recipes_array[1],recipes_array[2]);
 } }

end;
//ITEM DETAILS END;
  
//Scroll buttons:
if gui_draw_sprite_clickable(spr_window_button_scroll,0,xx+212,yy+63,true)=true
 {if scroll&gt;0 {scroll-=1; update_list=true;}}
if gui_draw_sprite_clickable(spr_window_button_scroll,1,xx+212,yy+343,true)=true
 {if scroll&lt;ds_list_size(global.crafting_recipes)-15 {scroll+=1; update_list=true;}}

//Close button:
if gui_draw_sprite_clickable_rel(spr_window_close,0,xx+305,yy+370)=true
  instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is empty but needed.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>188,188</point>
  </PhysicsShapePoints>
</object>
