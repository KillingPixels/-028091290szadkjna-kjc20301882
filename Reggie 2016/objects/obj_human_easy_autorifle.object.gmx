<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_ninja</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ai_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Initialization
 skill=3;
set_behavior_values_human1(skill);
_name="HUMAN";

_group=GROUP.enemy;

_isCommander=false;
_isPrimal=false;
_moveMode=0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Attack setup

//weapon list---------------------------
primary_weapon_initialize("Rifle");
secondary_weapon_initialize("BasicGranade");
granadeNumber=2
//------------------------------------------------------
_prefDist=250; //prefered distance to player

_enemyPrecision=90/skill



//Secondary attack:
  //No secondary attack.
 
//General:
_granadeSpeed=1;
_precisionState=1;
_attackTimer=-_attackSpeed;
_attackMode=0;
_currentHealth=_maxHealth;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free memory
buf_instance_free();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>game_paused()</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Attack setup

//Cooldowns:
if _attackTimer&gt;-_attackSpeed
 _attackTimer-=1;
 if(_aiState=AI_STATE.hunt)and(_aiStage=0)
 {
    if(_pastHealth&gt;_health) and ((irandom_range(0,skill)=1))
        {
        if(_granadeSpeed=0)_granadeSpeed=1;
        _scriptStep=0;
        _aiState=AI_STATE.hide;
        _pastHealth=_health;
        } 
    _pastHealth=_health;
 }
 if(_aiState=AI_STATE.hide)
 {
    if((irandom_range(0,skill*5)=1))
    if(ai_select_target(_group, _attackRange,0)=-1)
        {
        _aiStage=1;
        _aiState=AI_STATE.hunt;
        }
     _pastHealth=_health;
 }
if(_aiStage=1)and(_aiState= AI_STATE.hunt)
   { 
    if(_pastHealth&gt;_health)
      {   
       _aiStage=0;
       _pastHealth=_health;
      }
    if(_currentHideTime&gt;0) _currentHideTime-=1;
    if(_currentHideTime=0)
        {
        _currentHideTime=_hideTIme;
        _aiStage=0;
        }
    
    _scriptStep=ai_force_stop;
    }
    if(_aiState= AI_STATE.flee)_scriptStep=0;
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Step Actions (Secondary)

//Health regen (STUB)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Attack (Primary, Gun)
var __dist, __dir;

if (_aiState=AI_STATE.hunt) _precisionState=1;
if (_aiState=AI_STATE.ret) or (_aiState=AI_STATE.hide) _precisionState=2;

if ((_aiState=AI_STATE.hunt) or (_aiState=AI_STATE.ret) or (_aiState=AI_STATE.hide)) begin

 
   if _attackTimer&gt;-_attackSpeed {
   if (instance_exists(_target) and _target&gt;0) {
   if (_attackTimer=0) {
        if(_precisionState=2)and(granadeNumber&gt;0)and(_granadeSpeed=1)
        {
        _granadeSpeed-=1
        granadeNumber-=1
        var a;
        a=lob_parameters_e(x,y,_target.x,_target.y,_granadeElevation,_granadeGravity,_granadeSpeedMult);       
        create_projectile_grenade(x,y,object_index,_group,haleluja_bomb,a[0],a[1],_granadeDamage,_granadeExpScale,spr_explosion,_granadeKnock,0,0,a[2],1); 
        } 
        
  //---------------------------------------------------------------------------------

  if(_clipSize&gt;0)
  {_clipSize-=1;
   var precise=irandom_range(-_enemyPrecision*_precisionState,_enemyPrecision*_precisionState);
  for(i=0;i&lt;_numberProjectile;i++)
   { __dir=point_direction(x,y,_target.x,_target.y+(irandom_range(-_weaponPrecision,_weaponPrecision))+precise);
    create_projectile_bullet(x,y,object_index,_group,spr_bullet_long,__dir,_projectileSpeed,_projectileDamage,-1,-1,_projectileKnockback,0,0,_bulletDrop,1)
   }
   }
   else 
   {
   if(_clipReload&gt;0){_clipReload-=1;}
   if(_clipReload=0)
   {_clipSize=_clipSizeMax;
   _clipReload=_clipReloadTime 
   }
   
   }
  }
   
    }
   }
  
  
  else {
 
   //Try to attack:
   if (instance_exists(_target) and _target&gt;0) {

    if !HG_collision_line(-1,x,y,_tarX,_tarY,GLOBAL.precision) {
     if (distance_to_object(_target)&lt;=_granadeRange and _precisionState=2) 
     {
      //Start attack animation: 
      _attackTimer=_granadeLength;
      }
     if distance_to_object(_target)&lt;=_attackRange 
     {
      //Start attack animation: 
      _attackTimer=_attackLength;
      }
           
     } 
    }  
   }

end;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Attack (Secondary, Disabled)

//Deal damage:

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Set image

if _hspeed&lt;&gt;0 {
 if _grounded=false
  image_xscale=sign(_hspeed)
  else
   image_xscale=-1+(_tarX&gt;x)*2;
 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_ai_parent">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self

draw_sprite_ext(mask_index,0,x,y,1,1,0,c_white,0.25);
draw_sprite_ext(sprite_index,0,x,y,image_xscale,ite(_moveHeight,1,0.5,1),1,c_white,1);

if _attackTimer&gt;=0
 draw_sprite_ext(mask_index,0,x,y,1,1,0,c_yellow,0.5);

draw_set_colour(c_aqua);
draw_set_halign(fa_center);

draw_text(x,y-32,_name);

draw_circle(x,y-_eyesY,3,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
