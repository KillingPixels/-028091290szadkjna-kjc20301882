<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_window_journal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-105</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basic variables setup:
scroll=0;
selected_1="";
selected_2="";
mode=0;

//Descriptions:
desc_scroll=0;
desc_text="";
desc_orig_text="";
desc_lines=1;

desc_max_lines=16;

//Other:
xx=0;
yy=0;

journal_sort();

update_notes=false;
update_entries=false;
update_desc=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Closing:
if keyboard_check_pressed(userControls[KEYBOARD.pause])=true
 instance_destroy();

//Update entries:
var i;

if update_entries=true {

 for (i=1; i&lt;=14; i+=1) begin
  entries_array[i,1]="";
  entries_array[i,2]="";
 end;
 
 if journal_unlocked_entries()&gt;0 {
 
  for (i=1; i&lt;=journal_unlocked_entries(); i+=1) begin
   entries_array[i,1]=global.journal_grid[#0,i-1+scroll];
   entries_array[i,2]=string(i-1+scroll);
  end;
  
 }

 update_entries=false;
 
 }

//Update notes:
var __ls,i;

if update_notes=true {

 for (i=1; i&lt;=14; i+=1) begin
  notes_array[i,1]="";
  notes_array[i,2]="";
 end;
 
 __ls=ds_list_size(global.journal_list);
 
 if __ls&gt;0 {
 
  for (i=1; i&lt;=__ls-scroll; i+=1) begin
   notes_array[i,1]=global.journal_list[|__ls-i-scroll];
   notes_array[i,2]=global.journal_list[|__ls-i-scroll];
   
   if i=14 break;
  end;
  
  }
  
 for (i=1; i&lt;=14; i+=1) begin
  notes_array[i,1]=string_copy(notes_array[i,1],1,string_pos(":=",notes_array[i,1])-1);
  notes_array[i,2]=string_delete(notes_array[i,2],1,string_length(notes_array[i,1])+2);
 end;
  
 update_notes=false; 
 
 }
 
//Update description:
if update_desc=true {

 switch (mode) begin
 
 case 0:
  break;
 
 case 1:
   if global.journal_grid[#2,real(selected_2)]=""
       desc_orig_text="Write something..."
       else
        desc_orig_text="Selected_keyword:#  "+global.journal_grid[#2,real(selected_2)]+"##  "+global.journal_grid[#3,real(selected_2)];
      
   desc_lines=string_count_lines(desc_orig_text,168);  
   desc_text=string_cut_for_scrolling(desc_orig_text,168,desc_max_lines,desc_scroll);
  break;
 
 case 2:
   desc_lines=string_count_lines(selected_2,168);
   desc_text=string_cut_for_scrolling(selected_2,168,desc_max_lines,desc_scroll);
  break;
 
 default:
  break;
 
 end;

 update_desc=false;

 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (mode) begin

 case 0:
   exit;
  break;
  
 case 1:
   if device_mouse_raw_x(0)&lt;gui_width()/2 {
    if journal_unlocked_entries()&gt;14+scroll {
     scroll+=1;
     update_entries=true;
     }
    }
    else {
     if desc_scroll&lt;desc_lines-desc_max_lines {
      desc_scroll+=1;
      update_desc=true;
      }
     }
  break;
  
 case 2:
   if device_mouse_raw_x(0)&lt;gui_width()/2 {
    if ds_list_size(global.journal_list)&gt;14+scroll {
     scroll+=1;
     update_notes=true;
     }
    }
    else {
     if desc_scroll&lt;desc_lines-desc_max_lines {
      desc_scroll+=1;
      update_desc=true;
      }
     }
  break;
  
 default:
  break;

end;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (mode) begin

 case 0:
   exit;
  break;
  
 case 1:
   if device_mouse_raw_x(0)&lt;gui_width()/2 {
    if scroll&gt;0 {
     scroll-=1;
     update_entries=true;
     }
    }
    else {
     if desc_scroll&gt;0 {
      desc_scroll-=1;
      update_desc=true;
      }
     }
  break;
  
 case 2:
   if device_mouse_raw_x(0)&lt;gui_width()/2 {
    if scroll&gt;0 {
     scroll-=1;
     update_notes=true;
     }
    }
    else {
     if desc_scroll&gt;0 {
      desc_scroll-=1;
      update_desc=true;
      }
     }
  break;
  
 default:
  break;

end;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var str,spr,counter,son,new_scroll;

//Set up GUI x and y:
xx=gui_width()/2-sprite_get_width(sprite_index)/2;
yy=gui_height()/2-sprite_get_height(sprite_index)/2;

//Draw own sprite:
spr=min(mode,1);
draw_sprite(sprite_index,spr,xx,yy);

//Font setup:
draw_set_font(f_windows);
draw_set_alpha(1);
draw_set_valign(fa_top);
draw_set_halign(fa_left);

switch (mode) begin

 //First (general) tab:  --------------------------------------------------------------------------
 case 0:
   draw_sprite(spr_window_journal_tab,0,xx+5,yy+35);
   if gui_draw_rectangle_clickable(xx+146,yy+38,129,13,1)=true
    {mode=1; scroll=0; selected_1=""; selected_2=""; update_entries=true; desc_scroll=0; desc_text="";}
   if gui_draw_rectangle_clickable(xx+284,yy+38,129,13,1)=true
    {mode=2; scroll=0; selected_1=""; selected_2=""; update_notes=true; desc_scroll=0; desc_text="";}
  break;
  
 //Second (My entries) tab: -----------------------------------------------------------------------
 case 1:
   draw_sprite(spr_window_journal_tab,1,xx+143,yy+35);
   if gui_draw_rectangle_clickable(xx+8,yy+38,129,13,1)=true
    {mode=0; scroll=0; selected_1=""; selected_2=""; desc_scroll=0; desc_text="";}
   if gui_draw_rectangle_clickable(xx+284,yy+38,129,13,1)=true
    {mode=2; scroll=0; selected_1=""; selected_2=""; update_notes=true; desc_scroll=0; desc_text="";}
    
   //Filter title:
   draw_set_color(c_black);
   draw_text(xx+12,yy+64,"Journal entries:");
 
   counter=0;
   //LOOP BEGIN:
   repeat (14) begin
    counter+=1;

    if entries_array[counter,1]&lt;&gt;"" {

    //Clickable text boxes:
    if selected_1=entries_array[counter,1]
     spr=1
     else
      spr=0;
    if gui_draw_sprite_clickable(spr_window_name_box_wide,spr,xx+9,yy+counter*20+65,1)=true
     {selected_1=entries_array[counter,1];
      selected_2=string(counter+scroll-1);
      update_desc=true; }

    //Entry names:
    draw_set_color(ite(global.journal_grid[#2,counter+scroll-1],"",c_red,c_black));
    draw_text(xx+12,yy+66+20*counter,entries_array[counter,1]);

    }
    end;
    //LOOP END;
    
    //SELECTION DETAILS:
    if selected_1&lt;&gt;"" {
    
     //Selected entry name and description:
     draw_set_colour(c_black);
     draw_text(xx+233,yy+62,selected_1);
     draw_text(xx+233,yy+90,desc_text);
        
      //Description scroll:
      if gui_draw_sprite_clickable(spr_window_button_scroll,0,xx+402,yy+91,true)=true
       {if desc_scroll&gt;0 {
         desc_scroll-=1;
         update_desc=true;
         } }
      if gui_draw_sprite_clickable(spr_window_button_scroll,1,xx+402,yy+325,true)=true
       {if desc_scroll&lt;desc_lines-desc_max_lines {
         desc_scroll+=1;
         update_desc=true;
         } }
       
      //Write button:
      if journal_entry_filled(real(selected_2))=false
       spr=0
       else
        spr=1;
      if gui_draw_sprite_clickable(spr_window_button_write,spr,xx+248,yy+350,true)=true
       {if spr=0 {
         son=instance_create(x,y,obj_gui_entry_input);
         son.target=real(selected_2);
         instance_destroy();
         } }
         
     //Scroll bar:
     new_scroll=gui_draw_scroll_bar(xx+402,yy+111,xx+412,yy+323,desc_lines,desc_max_lines,desc_scroll,placeholderSpr);
     if desc_scroll&lt;&gt;new_scroll {
      desc_scroll=new_scroll;
      update_desc=true;     
      }

     }

  break;

 //Third (Other notes) tab: -----------------------------------------------------------------------
 case 2:
   draw_sprite(spr_window_journal_tab,2,xx+281,yy+35,);
   if gui_draw_rectangle_clickable(xx+8,yy+38,129,13,1)=true
    {mode=0; scroll=0; selected_1=""; selected_2=""; desc_scroll=0; desc_text="";}
   if gui_draw_rectangle_clickable(xx+146,yy+38,129,13,1)=true
    {mode=1; scroll=0; selected_1=""; selected_2="";  update_entries=true; desc_scroll=0; desc_text="";}
    
   //Filter title:
   draw_set_color(c_black);
   draw_text(xx+12,yy+64,"Notes:");
   
   counter=0;
   //LOOP BEGIN:
   repeat (14) begin
    counter+=1;

    if notes_array[counter,1]&lt;&gt;"" {

    //Clickable text boxes:
    if selected_1=notes_array[counter,1] spr=1
     else spr=0;
    if gui_draw_sprite_clickable(spr_window_name_box_wide,spr,xx+9,yy+counter*20+65,1)=true
     {selected_1=notes_array[counter,1];
      selected_2=notes_array[counter,2];
      update_desc=true;}

    //Note names:
    draw_set_color(c_black);
    draw_text(xx+12,yy+66+20*counter,notes_array[counter,1]);

    }
    end;
    //LOOP END;
       
    //Selected note name and text:
    if selected_1&lt;&gt;"" {
     
     //Name:
     draw_text(xx+233,yy+62,selected_1);
    
     //Description scroll:
     if gui_draw_sprite_clickable(spr_window_button_scroll,0,xx+402,yy+91,true)=true
       {if desc_scroll&gt;0 {
         desc_scroll-=1;
         update_desc=true;
         } }
     if gui_draw_sprite_clickable(spr_window_button_scroll,1,xx+402,yy+325,true)=true
       {if desc_scroll&lt;desc_lines-desc_max_lines {
         desc_scroll+=1;
         update_desc=true;
         } }
    
     //Drawing:
     draw_set_color(c_black);
     draw_text(xx+233,yy+90,desc_text);
     }
    
  break;
  
 //------------------------------------------------------------------------------------------------
 default:
  break;

end;

//Close button:
if gui_draw_sprite_clickable_rel(spr_window_close,0,xx+305,yy+372)
 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is empty but needed.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
