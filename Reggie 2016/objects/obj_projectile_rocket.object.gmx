<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>projectileDefaultSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic setup 2
/* 
VARIABLES:

Built in:
 image_angle

Other:
  _sprite

 patron_type
 ammo_type
 
 ** _direction --&gt; _hspeed
 ** _speed --&gt; _vspeed
 
 damage
 exp_radius
 exp_sprite
 knockback
 dot
 dot_type
 arc
 
*/

destroyed=false;

x1=0;
y1=0;
x2=0;
y2=0;





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Explosion:
var son;

//SPECIAL ACTIONS::
switch (patron_type) begin
 
 default:
  break;
 
end;
 
//DEFAULT ACTIONS:
if exp_radius&gt;0 {

 son=instance_create(x,y,obj_explosion);
 son._group=_group;
 son.patron_type=patron_type;
 son.sprite_index=exp_sprite;
 son.image_xscale=exp_radius;
 son.image_yscale=exp_radius;
 son.damage=damage;
 son.knockback=knockback;
 son.dot=dot;
 son.dot_type=dot_type;
 
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execution
if game_paused()=false begin

 //Direction &amp; speed:
 _direction=point_direction(0,0,_hspeed,_vspeed);
 _speed=sqrt(sqr(_hspeed)+sqr(_vspeed));

 //Sprite:
 //image_yscale=sprite_get_height(_sprite)/5;
 image_angle=_direction;

 //SPECIAL ACTIONS: 
 switch (patron_type) begin
   
  case obj_enemy_waker:
    image_xscale+=0.05;
   break;
   
  case obj_enemy_turta:
    //ptc_create_particles(x,y,16,16,PTC_TYPE.fire,4,1,-1);
   break;
 
  default:
   break;
 
 end;

 //Movement:  
 x+=_hspeed;
 
 _vspeed+=arc;
 y+=_vspeed;
 
 //Destruction:
 if destroyed=true instance_destroy();
  
end;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Terrain collisions
var t1,t2;

t1=_speed*dcos(_direction)/2;

x1=x-t1;
x2=x+t1;

t2=_speed*dsin(_direction)/2;

y1=y-t2;
y2=y+t2;

if HG_collision_line(-1,x1,y1,x2,y2,4)=true
 destroyed=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bodyParObj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Impact

 //SPECIAL ACTIONS: 
 switch (patron_type) begin
   
  case obj_enemy_waker:
   break;
   
  case obj_enemy_turta:
    if ammo_type=2
     exit;
   break;
 
  default:
   break;
 
 end;
 
//DEFAULT ACTIONS:
if (other._group&lt;&gt;_group and destroyed=false) {

 if exp_radius=-1 {

  other._health-=damage;
  other._hspeed+=dcos(point_direction(0,0,_hspeed,_vspeed))*knockback;
  other._vspeed-=dsin(point_direction(0,0,_hspeed,_vspeed))*knockback;
  //apply dot
 
  destroyed=true;
 
  }
  else {
  
   destroyed=true;
   
   }
   
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drawing

//draw_set_blend_mode(bm_add);

 draw_sprite_ext(_sprite,-1,x,y,1,1,image_angle,c_white,1); 
 
//draw_set_blend_mode(bm_normal);

//Temp:
draw_bbox(image_angle,c_fuchsia);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
