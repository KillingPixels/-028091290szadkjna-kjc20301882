<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_fsm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_ai_parent_flyer</parentName>
  <maskName>playerDefaultMaskSpr</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Initialization

set_behavior_values_bb();

_isCommander=false;
_isPrimal=true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Attack setup

 //Primary attack (Claw):
 _attackRange=16;     // e - Lower than preferred distance
 _attackSpeed=60;     // e
 _attackLength=8;     // e
 _attackDamage=2;     // e
 _attackHKnock=5;     // e
 _attackVKnock=3;     // e 
 
 //Secondary attack (Grab): 
 _chanceToGrab=25;
 _grabDuration=150;
 _grabDamage=10; // Doesn't do anything!
 
 //General:
 _lastAttack=0;
 _grabbedPlayer=0;
 _attackMode=0;
  
 _attackTimer=-_attackSpeed;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free memory
buf_instance_free();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>game_paused()</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Attack setup
var __dist;

if _aiState=AI_STATE.hunt {

 if _grabbedPlayer=true {
  _attackMode=1;
  }
  else {
   _attackMode=0;
   }
  
 }
 
//Cooldowns:
if _attackTimer&gt;-_attackSpeed
 _attackTimer-=1;
 
//Other:
_lastAttack+=1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Step Actions (Secondary)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Attack (Primary, Claw)
var __eta, __dist, __spd;

if _attackMode=0 begin

if _attackTimer&gt;-_attackSpeed {
 
 //Deal damage:
 if (instance_exists(_target) and _target&gt;0) {
  if (_attackTimer=0 and distance_to_object(_target)&lt;=_attackRange) {
  
   if (_target=global.player_obj_id) {
   
    if irandom(100)&lt;_chanceToGrab and (global.player_obj_id)._grounded=true{
     _attackMode=1;
     _grabbedPlayer=1;
     player_damage(_grabDamage,0,0);
     }
     else {   
      player_damage(_attackDamage,_attackVKnock,_attackHKnock);
      screen_flash(c_red);      
      }
      
    }
    else {
     object_damage(_target,_attackDamage,_attackVKnock,_attackHKnock);
     }
   
   _lastAttack=0; 
     
   }
  }
 }
  
 else {
 
 //Try to attack:
 if (instance_exists(_target) and _target&gt;0) {

  //Estimate ETA:
  __eta=9999;
  __dist=9999;
  if collision_line(x,y,_tarX,_tarY,staticParObj,true,true)==noone {

   __dist=distance_to_object(_target)-_attackRange/2;
   __spd=abs(_hspeed-_target._hspeed);
  
   if __spd&lt;&gt;0
    __eta=ceil(__dist/__spd)+1;

   }

  tv1=__eta;  
      
  //Start attack animation: 
  if (__eta&lt;_attackLength or __dist&lt;=_attackRange/2) {
   _attackTimer=_attackLength;  
   }
 
 }
  
}

end;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Attack (Secondary, Grab)

if _attackMode=1 begin

 object_move_to(global.player_obj_id,x,y+20,2,16);
 
 (global.player_obj_id)._hspeed=_hspeed;
 (global.player_obj_id)._vspeed=0;
 
 _attackTimer=0;
 
 if _lastAttack&gt;_grabDuration or
    distance_to_object(global.player_obj_id)&gt;4
  _grabbedPlayer=0;

end;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Set image

//*********************************
if object_index=obj_ai_parent_flyer begin
//*********************************


if _hspeed&lt;&gt;0 {
 if _grounded=false
  image_xscale=sign(_hspeed)
  else
   image_xscale=-1+(_tarX&gt;x)*2;
 }
 

//***
 end;
//***
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_ai_parent">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw self

draw_sprite_ext(mask_index,0,x,y,1,1,0,c_white,0.5);
draw_sprite_ext(sprite_index,0,x,y,image_xscale,1,1,c_white,1);

if _attackTimer&gt;=0
 draw_sprite_ext(mask_index,0,x,y,1,1,0,c_yellow,0.5);

draw_text(x,y,string(_attackTimer)+"#"+string(_moveMode));

//draw_line(x,y,_tarX,_tarY);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
