<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ctrl_fsm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables setup

//Main:
counter=0;
state=0;

//Other:
eyesClosed=1; // %
eyelidSurf=-4;
//show_debug_overlay(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (game_paused()) {
  //Set depth...
  exit;
  }

switch (state) begin

  case 0:
    //All black, nothing's happening
    //Duration: 3 seconds
    if (counter==0) {
      game_start_scene(true);
      game_set_scene_camera(0,0);
      }
    else if (counter==180) {
      counter=0;
      state+=1;
      }
    eyesClosed=1;
    break;

  case 1:
    //Eye blinking once slowly and then three times fast
    //Intense screen blooming
    //Duration: 5 seconds
    screen_set_bloom_override(1+5*(1-counter/160),1+0.5*(1-counter/160));
    if (counter&lt;120) {
      eyesClosed=1-counter/120;
      }
    else if (counter&lt;160) {
      eyesClosed=abs(sin((counter-120)/20*pi));
      }
    else if (counter==160) {
      counter=0;
      state+=1;
      }    
    break;
    
  case 2:
    //Bloom slowly diminishes (but not completely)
    //After 2 sec Reggie falls from the bed and gets hurt
    //And eyec slose to 33%
    //Duration: 2.5 - 3 seconds
    //game_set_scene_camera((global.player_obj_id).x,(global.player_obj_id).y);
    if (counter&lt;120) {
      screen_set_bloom_override(0.25+0.75*(1-counter/120),0.25+0.75*(1-counter/120)); //Bloom falls to (0.25,0.25)
      game_set_scene_camera(0,0);
      eyesClosed=0;
      if (counter==60) {
        //Enable player animation and gravity- he'll fall after 1 second        
        }
      }
    else if (counter==120) {
      screen_set_bloom_override(0.25,0.25);
      screen_flash(c_red,0.05);
      (global.player_obj_id).locked=false;
      game_start_scene(false);
      }
    else if (counter&lt;150) {
      screen_set_bloom_override(0.25+0.25*(counter-120)/30,0.25+0.25*(counter-120)/30); //Bloom goes back to (0.5,0.5)
      eyesClosed=0.33*(counter-120)/30; //Eyes close to 33%
      }
    else if (counter==150) {
      screen_set_bloom_override(0.5,0.5);
      counter=0;
      state+=1;      
      }
    break;
    
  case 3:
    //The player is now allowed to crawl
    //Eyes close as they approach the door
    //Duration: n/a
    screen_set_bloom_override(0.5,0.5);
    eyesClosed=max(eyesClosed,0.33+0.66*((global.player_obj_id).x-300)/400);
    if (obj_hospital_dead_relative._collision==true) {
      counter=0;
      state+=1;
      }
    break;
    
  case 4:
    //Player no longer has control
    //Reggie passes out after calling Richard's name
    //Hospital sounds...
    if (counter==1) {
      (global.player_obj_id).locked=true;
      screen_set_bloom_override(0.5,0.5);
      }
    else if (counter&lt;60) {
      //Do nothing.
      screen_set_bloom_override(0.5,0.5);
      }
    else if (counter&lt;180) {
      //Show text bubble ["Richard..."]
      screen_set_bloom_override(0.5,0.5);
      }
    else if (counter==180) {
      //Play thud sound
      eyesClosed=1;
      game_start_scene(true);
      game_set_scene_camera(0,0);
      instance_create(252,224,obj_hospital_nurse);
      instance_create(300,224,obj_hospital_raskal);
      }
    else if (counter&lt;480) {
      //Eyes still closed, playing hospital sounds
      }
    else if (counter&lt;600) {
      eyesClosed=1-0.65*(counter-480)/120;
      }
    else if (counter==600) {
      obj_hospital_nurse._dialogue=true;
      }
    else if (!txt_obj_exists()) {
      game_start_scene(true);
      counter=0;
      state+=1;
      }
    break;
    
  case 5:
    //The 1st dialogue has just ended
    //Reggie falls unconscious again
    if (counter&lt;90) {
      eyesClosed=0.36+0.65*(counter)/90;
      }
    else if (counter==90) {
      remove(obj_hospital_nurse);
      }
    else if (counter&lt;210) {
      //Screen is just black for 2 seconds
      }
    else if (counter&lt;270) {
      eyesClosed=1-(counter-210)/60;
      }
    else if (counter&lt;310) {
      eyesClosed=abs(sin((counter-270)/20*pi));      
      }
    else if (counter==310) {
      obj_hospital_raskal._dialogue=true;
      }
    break;
    
  default:
    instance_destroy();
    break;

end;

counter+=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw eyelids:
var i,h,sw,sh,p;

//Prepare eyelid surface:
sw=GLOBAL.view_width/2;
sh=GLOBAL.view_height/4;
p=50;

if !surface_exists(eyelidSurf)
  eyelidSurf=surface_create(sw,sh);
  
surface_set_target(eyelidSurf);

  draw_clear_alpha(c_black,0);

  draw_set_colour(c_black);
  draw_set_alpha(1);

  for (i=0; i&lt;sw; i+=1) {

    h=1.0*sh*sin(pi*(i+p)/(sw+2*p))*(1-eyesClosed);
    draw_line(i,0,i,sh-h);

    }
    
surface_reset_target();

//Draw eyelid surface with blur:
shader_set(sh_gauss);
    
  shader_set_uniform_f(global.sha_gauss_sigma,5.0);
  shader_set_uniform_f(global.sha_gauss_blurSize,1.0/120);
   
  draw_surface_ext(eyelidSurf,view_xview,view_yview,2,2,0,c_white,1);
  draw_surface_ext(eyelidSurf,view_xview,view_yview+sh*4,2,-2,0,c_white,1);

shader_reset();
    
//Draw frame:
draw_line_width(view_xview,view_yview,view_xview+2*sw-1,view_yview,10);
draw_line_width(view_xview+2*sw-1,view_yview,view_xview+2*sw-1,view_yview+4*sh-1,5);
draw_line_width(view_xview,view_yview+4*sh-1,view_xview+2*sw-1,view_yview+4*sh-1,10);
draw_line_width(view_xview,view_yview,view_xview,view_yview+4*sh-1,5);    



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
