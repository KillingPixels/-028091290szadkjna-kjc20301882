<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_window_start_game</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-105</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Basic variables setup:
scroll=0;
selected="";

xx=0;
yy=0;

newgame="Start new game...";

//Gather directory names:
var f;

dirs=ds_list_create();

f=file_find_first(working_directory+"\*_save_state",0);

while (f&lt;&gt;"") {

 ds_list_add(dirs,string_delete(f,string_pos("_save_state",f),11));
 
 f=file_find_next();
 
 }
 
if (room=room_menu)
 ds_list_add(dirs,newgame);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(dirs);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Closing:
if keyboard_check_pressed(userControls[KEYBOARD.pause])=true
 instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if scroll&lt;ds_list_size(global.barter_list)-15 and comb_list[15]&lt;&gt;0 {
 scroll+=1;
 }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if scroll&gt;0 {
 scroll-=1;
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var str,spr,i,counter,check;
draw_set_font(f_windows);

//Set up GUI x and y:
xx=gui_width()/2-sprite_get_width(sprite_index)/2;
yy=gui_height()/2-sprite_get_height(sprite_index)/2;

//Draw own sprite:
draw_sprite(spr_window_start_game,0,xx,yy);

//COMBINATION LIST:
draw_set_alpha(1);
draw_set_valign(fa_top);
draw_set_halign(fa_left);

//LOOP BEGIN:
for (i=scroll; i&lt;min(scroll+9,ds_list_size(dirs)); i+=1) {

 //Small icons:
 //spr=0;
 //draw_sprite_ext(spr,0,xx+9,yy+counter*20+43,0.5,0.5,0,c_white,1); 

 //Clickable text boxes:
 spr=ite(dirs[|i],selected,1,0);
 if gui_draw_sprite_clickable(spr_window_name_box,spr,xx+29,yy+i*20+63,1)=true {
  selected=dirs[|i]
  }

 //Combination names:
 draw_set_color(c_black);
 draw_text(xx+32,yy+65+20*i,dirs[|i]);

end;
//LOOP END;

//Filter title:
draw_set_color(c_black);
draw_text(xx+14,yy+42,"Choose a save file:");

//FILE DETAILS BEGIN:

if (selected&lt;&gt;"") {

 if gui_draw_sprite_clickable(spr_window_button_play,0,xx+249,yy+249,true)=true {
  
  switch (room) begin
  
   case room_menu:
     remove(obj_main_menu);
     ds_list_destroy(dirs);
     sett_free();
     
     if (selected=newgame) {
      //game_initialize(0);
      //room_goto_next();
      with (instance_create(0,0,obj_load_fade)) {
        mode="new";
        name="";
        delay=90;
        md=delay;
        }
      }
      else {
       //game_load_checkpoint(selected);
       with (instance_create(0,0,obj_load_fade)) {
         mode="load";
         name=selected;
         delay=90;
         md=delay;
         }
       }
     instance_destroy(); 
    break;
    
   default:
     game_free();
     game_load_checkpoint(selected);
    break;
    
   end;
 
  }

 }

//FILE DETAILS END;

//Scroll buttons:
if gui_draw_sprite_clickable(spr_window_button_scroll,0,xx+212,yy+63,true)=true {
 if scroll&gt;0 scroll-=1;
 }
if gui_draw_sprite_clickable(spr_window_button_scroll,1,xx+212,yy+243,true)=true {
 if scroll&lt;ds_list_size(dirs)-10 scroll+=1;
 }

//Close button:
if gui_draw_sprite_clickable_rel(spr_window_close,0,xx+305,yy+270)
  instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is empty but needed.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>211,211</point>
  </PhysicsShapePoints>
</object>
