<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_window_entry_input</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-105</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyword=1;
//writing="Bananas!";
cancel=false;

line_counter=0;
line=true;
keyboard_string="";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fill entry and open journal again

if cancel=false {

 //STUB - Fill entry:
 journal_fill_entry(global.journal_grid[#0,target],keyboard_string,keyword);
 journal_award(global.journal_grid[#0,target]);

 //Open journal:
 son=instance_create(x,y,obj_gui_journal);
 
 son.mode=1;
 son.scroll=max(0,target+1-14);
 son.update_entries=true;
 son.selected_1=global.journal_grid[#0,target];
 son.selected_2=string(target);
 son.update_desc=true;
 
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Closing:
if keyboard_check_pressed(userControls[KEYBOARD.pause])=true
 instance_destroy();

//Typing line:
line_counter+=1;
if line_counter=15 {
 line=not line;
 line_counter=0;
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i,t,spr,counter;

//Set up GUI x and y:
xx=gui_width()/2-sprite_get_width(sprite_index)/2;
yy=gui_height()/2-sprite_get_height(sprite_index)/2;

//Draw own sprite:
draw_sprite(sprite_index,0,xx,yy);

//Font setup:
draw_set_font(f_windows);
draw_set_alpha(1);
draw_set_valign(fa_top);
draw_set_halign(fa_left);

//Title 1:
draw_set_color(c_black);
draw_text(xx+12,yy+42,"Select a keyword:");

//Keyword selection:
for (i=0; i&lt;4; i+=1) begin
 for (t=0; t&lt;2; t+=1) begin
  counter=(i*2)+(t+1);
  if global.journal_grid[#counter+3,target]&lt;&gt;"" {
   spr=(keyword==counter);
   if gui_draw_sprite_clickable(spr_window_name_box,spr,xx+9+t*179,yy+63+i*20,true)=true {
    keyword=counter;  
    }
   draw_set_colour(c_black);
   draw_text(xx+13+t*179,yy+64+i*20,global.journal_grid[#counter+3,target]);
   } 
 end;
end;

//Title 2:
draw_set_color(c_black);
draw_text(xx+12,yy+155,"Write down your thoughts:");

//Keyboard string:
draw_set_color(c_black);
draw_text_ext(xx+11,yy+178,keyboard_string+ite(line,true," |",""),13,350);

//Finalize button:
spr=!(string_length(keyboard_string)&gt;=JOURNAL.textMinimum);
if gui_draw_sprite_clickable(spr_window_button_finalize,spr,xx+222,yy+292,true)=true
 {if spr=0 {
   instance_destroy();
   cancel=false; 
   } }

//Close button:
if gui_draw_sprite_clickable(spr_window_close,0,xx+258,yy+314,true)
 {instance_destroy();
  cancel=true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is empty but needed.
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
